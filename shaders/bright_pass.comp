#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, rgba8) readonly uniform image2D InputImage;
layout(binding = 1, rgba16f) writeonly uniform image2D BrightPassImage;

layout(std140, binding = 2) uniform BloomParams
{
	float Threshold;
	float Intensity;
	float Knee;
	uint MipLevels;
} bloomParams;


float luminance(vec3 color)
{
	return dot(color, vec3(0.2126, 0.7152, 0.0722));
}

float softThreshold(float value, float threshold, float knee)
{
	float soft = clamp((value - threshold + knee) / (2.0 * knee), 0.0, 1.0);
	return mix(0.0, value - threshold, soft);
}

void main()
{
	ivec2 pixelCoord = ivec2(gl_GlobalInvocationID.xy);
	vec2 imageSize = vec2(imageSize(InputImage));

	if(pixelCoord.x >= imageSize.x || pixelCoord.y >= imageSize.y)
		return;

	vec4 color = imageLoad(InputImage, pixelCoord);
	float lum = luminance(color.rgb);
	float contribution = softThreshold(lum, bloomParams.Threshold, bloomParams.Knee);

	vec3 bloomColor = color.rgb * (contribution / max(lum, 0.001));
}